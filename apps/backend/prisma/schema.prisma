generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model HorseracePayment {
  id          BigInt     @id @default(autoincrement())
  racecourse  BigInt
  race        BigInt
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  races       Race       @relation(fields: [race], references: [id], onDelete: NoAction, onUpdate: NoAction)
  racecourses Racecourse @relation(fields: [racecourse], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments    Payment[]
}

model Machine {
  id                BigInt            @id(map: "machine_pkey") @default(autoincrement())
  name              String            @db.VarChar
  is_pachinko       Boolean
  created_at        DateTime?         @default(now()) @db.Timestamptz(6)
  pachislo_payments PachisloPayment[]
}

model PachisloPayment {
  id                                BigInt    @id(map: "pachislo_payment_pkey") @default(autoincrement())
  shop                              BigInt
  kind                              String    @db.VarChar
  machine                           BigInt
  created_at                        DateTime? @default(now()) @db.Timestamptz(6)
  update_at                         DateTime? @db.Timestamptz(6)
  rate                              BigInt
  machines                          Machine   @relation(fields: [machine], references: [id], onDelete: SetNull, onUpdate: NoAction)
  rate_pachislo_payments_rateTorate Rate      @relation("pachislo_payments_rateTorate", fields: [rate], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shops                             Shop      @relation(fields: [shop], references: [id], onDelete: SetNull, onUpdate: NoAction)
  payments                          Payment[]
}

model Payment {
  id                   BigInt            @id @default(autoincrement())
  date                 DateTime          @db.Date
  pachislo_payment_id  BigInt?
  horserace_payment_id BigInt?
  created_at           DateTime?         @default(now()) @db.Timestamptz(6)
  update_at            DateTime?         @db.Timestamptz(6)
  pay                  BigInt
  payback              BigInt
  memo                 String?           @db.VarChar
  user_id              BigInt
  horserace_payments   HorseracePayment? @relation(fields: [horserace_payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pachislo_payments    PachisloPayment?  @relation(fields: [pachislo_payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "payments_pachioslo_payment_id_fkey")
  users                User              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Racecourse {
  id                 BigInt             @id(map: "racecourse_pkey") @default(autoincrement())
  name               String             @db.VarChar
  created_at         DateTime?          @default(now()) @db.Timestamptz(6)
  horserace_payments HorseracePayment[]
}

model Race {
  id                 BigInt             @id(map: "race_pkey") @default(autoincrement())
  name               String             @db.VarChar
  created_at         DateTime?          @default(now()) @db.Timestamptz(6)
  horserace_payments HorseracePayment[]
}

model Rate {
  id                                             BigInt            @id @default(autoincrement())
  name                                           String            @db.VarChar
  is_pachinko                                    Boolean
  created_at                                     DateTime?         @default(now()) @db.Timestamptz(6)
  pachislo_payments_pachislo_payments_rateTorate PachisloPayment[] @relation("pachislo_payments_rateTorate")
}

model Shop {
  id                BigInt            @id(map: "shop_pkey") @default(autoincrement())
  name              String            @db.VarChar
  created_at        DateTime?         @default(now()) @db.Timestamptz(6)
  pachislo_payments PachisloPayment[]
}

model User {
  id         BigInt    @id @unique @default(autoincrement())
  user_id    String    @unique @db.Uuid
  nickname   String    @unique @db.VarChar
  like       String    @db.VarChar
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  payments   Payment[]
}
